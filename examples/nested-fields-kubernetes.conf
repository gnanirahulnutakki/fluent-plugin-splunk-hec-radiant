# Nested Fields Configuration (Issue #260)
# Shows how to access nested record fields for dimensions and metadata

# Example 1: Kubernetes metadata with nested fields
<match kubernetes.**>
  @type splunk_hec_radiant
  hec_host splunk.example.com
  hec_token YOUR_TOKEN_HERE

  # Access nested Kubernetes metadata using $.path.to.field syntax
  source ${$.kubernetes.pod_name}
  sourcetype ${$.kubernetes.container_name}
  host ${$.kubernetes.host}

  # Index based on namespace
  index k8s_${$.kubernetes.namespace_name}

  # Must declare nested fields in buffer chunk keys
  <buffer $.kubernetes.namespace_name, $.kubernetes.pod_name, $.kubernetes.container_name>
    @type memory
    flush_interval 10s
  </buffer>

  # Add nested fields as dimensions
  <fields>
    namespace ${$.kubernetes.namespace_name}
    pod ${$.kubernetes.pod_name}
    container ${$.kubernetes.container_name}
    app_label ${$.kubernetes.labels.app}
  </fields>
</match>

# Example 2: Application metadata from nested structures
<match app.**>
  @type splunk_hec_radiant
  hec_host splunk.example.com
  hec_token YOUR_TOKEN_HERE

  # Access nested application metadata
  # Record structure: { "app": { "name": "api", "version": "1.0", "env": "prod" } }

  source ${$.app.name}
  index ${$.app.env}_logs

  <buffer $.app.name, $.app.env>
    @type memory
  </buffer>

  <fields>
    app_name ${$.app.name}
    app_version ${$.app.version}
    environment ${$.app.env}
  </fields>
</match>

# Example 3: Deep nested structures
<match **>
  @type splunk_hec_radiant
  hec_host splunk.example.com
  hec_token YOUR_TOKEN_HERE

  # Access deeply nested fields
  # Record: { "meta": { "service": { "name": "auth", "region": "us-east" } } }

  source ${$.meta.service.name}
  host ${$.meta.service.region}

  <buffer $.meta.service.name, $.meta.service.region>
    @type memory
  </buffer>

  <fields>
    service_name ${$.meta.service.name}
    service_region ${$.meta.service.region}
  </fields>
</match>

# Example 4: Mixed static and nested fields
<match **>
  @type splunk_hec_radiant
  hec_host splunk.example.com
  hec_token YOUR_TOKEN_HERE

  # Combine static values with nested fields
  source myapp
  sourcetype ${$.log.type}

  <buffer $.log.type>
    @type memory
  </buffer>

  <fields>
    # Static field
    environment production
    # Nested field
    log_level ${$.log.level}
    log_source ${$.log.source}
  </fields>
</match>

# Example 5: Complete Kubernetes example with all metadata
<match kubernetes.**>
  @type splunk_hec_radiant
  hec_host splunk.example.com
  hec_token YOUR_TOKEN_HERE

  # HEC configuration
  protocol https
  hec_port 8088

  # Use Kubernetes metadata
  source ${$.kubernetes.container_name}
  sourcetype kube:container:${$.kubernetes.namespace_name}
  host ${$.kubernetes.host}
  index k8s_${$.kubernetes.namespace_name}

  # Buffer with all required chunk keys
  <buffer $.kubernetes.namespace_name, $.kubernetes.pod_name, $.kubernetes.container_name, $.kubernetes.host>
    @type file
    path /var/log/fluentd-buffers/splunk-k8s
    flush_interval 10s
    chunk_limit_size 5M
  </buffer>

  # Add comprehensive Kubernetes fields
  <fields>
    # Pod information
    pod_name ${$.kubernetes.pod_name}
    pod_id ${$.kubernetes.pod_id}
    namespace ${$.kubernetes.namespace_name}

    # Container information
    container_name ${$.kubernetes.container_name}
    container_image ${$.kubernetes.container_image}

    # Labels (if present)
    app_label ${$.kubernetes.labels.app}
    version_label ${$.kubernetes.labels.version}

    # Node information
    node_name ${$.kubernetes.host}
  </fields>
</match>
